@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    /* Firefox 18- */
    @content;
  }
  &::-moz-placeholder {
    /* Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}
@mixin clear {
  &::after,
  &::before {
    content: "";
    display: table;
  }
  &::after {
    clear: both;
  }
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  -ms-transform: $transform;
  -moz-transform: $transform;
  transform: $transform;
}

@function pixel_rsp($pixels, $w-parent){
  @return unquote( (($pixels / $w-parent) * 100) + '%');
}
@function sum($list, $force: false) {
  $result: 0;
  
  @each $item in $list {
    @if type-of($item) == number {
      @if $force and unit($item) {
        $item: $item / ($item * 0 + 1);
      }
      @if unitless($item) {
        $result: $result + $item;
      }
    }
  }
  @return $result;
}
@mixin columnator_rsp($numcols,$list,$w-parent) {
  $sum_items_list: sum($list, true);
  @debug $sum_items_list;
  th,
  td {
    @for $i from 1 through $numcols {
      &:nth-child(#{$i}) {
        width: pixel_rsp(nth($list, $i),$w-parent)!important;
      }
    }
  }
}
@mixin responsive($max, $width) {
  @media only screen and (unquote( $max + '-width: ' + $width)) {
    @content;
  }
}
